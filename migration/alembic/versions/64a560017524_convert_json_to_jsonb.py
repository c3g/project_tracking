"""Convert JSON to JSONB

Revision ID: 64a560017524
Revises: cacb85b3d114
Create Date: 2025-10-14 15:55:59.691048

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64a560017524'
down_revision: Union[str, None] = 'cacb85b3d114'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('experiment', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('file', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('job', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('location', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('metric', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('operation', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('operation_config', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('project', 'alias',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('project', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('readset', 'alias',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('readset', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('reference', 'alias',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('reference', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('run', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('sample', 'alias',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('sample', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('specimen', 'alias',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    op.alter_column('specimen', 'extra_metadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('specimen', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('specimen', 'alias',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('sample', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('sample', 'alias',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('run', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('reference', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('reference', 'alias',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('readset', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('readset', 'alias',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('project', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('project', 'alias',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('operation_config', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('operation', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('metric', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('location', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('job', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('file', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('experiment', 'extra_metadata',
               existing_type=sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###
