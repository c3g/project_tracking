name: Tag and Release Workflow

on:
  pull_request:
    types: [closed]
    branches: ['main']

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    if: startsWith(github.event.pull_request.title, 'Release:') && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.x'

      - name: Get tag
        id: get_tag
        run: |
          git branch --show-current
          git pull
          pdm install --prod --no-lock --no-editable
          echo "version=$(pdm show --version)" >> $GITHUB_OUTPUT

      - name: Tag the commit
        run: |
          next_version=${{ steps.get_tag.outputs.version }}
          git tag -a "$next_version" -m "Version $next_version"
          git push --follow-tags

      - name: Create changelog diff
        id: changelog_diff
        run: |
          sed -n '/#### [${{ steps.get_tag.outputs.version }}]/,/^#### /p' CHANGELOG.md | sed '$d' > release_notes.md

      - name: Call reusable Docker publish workflow
        uses: ./.github/workflows/reusable-docker-publish.yml
        with:
          image_name: ${{ github.repository }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.version }}
            ghcr.io/${{ github.repository }}:latest
        secrets:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.version }}
          name: Release ${{ steps.get_tag.outputs.version }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete release_notes file
        run: rm release_notes.md
